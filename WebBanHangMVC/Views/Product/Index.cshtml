@model IEnumerable<WebBanHangMVC.Models.Product> 

@{
    ViewData["Title"] = "Quản lý Sản phẩm";
    Layout = "_AdminLayout"; // Đảm bảo sử dụng layout admin của bạn
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0 text-primary">Danh sách Sản phẩm</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-circle me-2"></i>Thêm sản phẩm mới
        </a>
    </div>

    @* Hiển thị thông báo thành công (nếu có từ Controller) *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-white border-bottom py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 fw-bold text-dark">Tìm kiếm và lọc</h6>
            <form asp-action="Index" method="get" class="d-flex">
                <input type="text" name="search" class="form-control me-2" placeholder="Tìm kiếm sản phẩm..." value="@ViewBag.SearchTerm" />
                <button type="submit" class="btn btn-outline-primary"><i class="fas fa-search"></i></button>
            </form>
        </div>
        <div class="card-body">
            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-warning text-center" role="alert">
                    Không tìm thấy sản phẩm nào.
                </div>
            }
            else
            {
                <div class="product-list-wrapper"> 
                    <div class="table-responsive">
                        <table class="table table-hover table-striped">
                            <thead class="table-light">
                                <tr>
                                    <th>Ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Danh mục</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Ngày tạo</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                                            {
                                                <img src="@item.ImageUrl" alt="@item.Name" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;" />
                                            }
                                            else
                                            {
                                                <img src="https://via.placeholder.com/60?text=No+Image" alt="No Image" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;" />
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Category)</td>
                                        <td>@item.Price.ToString("N0")₫</td>
                                        <td>
                                            <span class="badge @(item.StockQuantity > 50 ? "bg-success" : item.StockQuantity > 10 ? "bg-warning text-dark" : "bg-danger")">
                                                @Html.DisplayFor(modelItem => item.StockQuantity)
                                            </span>
                                        </td>
                                        <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1" data-bs-toggle="tooltip" title="Chỉnh sửa"><i class="fas fa-edit"></i></a>
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-secondary me-1" data-bs-toggle="tooltip" title="Xem chi tiết"><i class="fas fa-eye"></i></a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" data-bs-toggle="tooltip" title="Xóa"><i class="fas fa-trash-alt"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @* Pagination (Dữ liệu ViewBag cần được Controller truyền vào) *@
                    @{
                        int currentPage = ViewBag.CurrentPage ?? 1;
                        int totalPages = ViewBag.TotalPages ?? 1;
                        string searchTerm = ViewBag.SearchTerm ?? "";
                    }
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center mt-4">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, search = searchTerm })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                     <a class="page-link" href="@Url.Action("Index", new { page = i, search = searchTerm })">@i</a>
                                </li>
                            }
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, search = searchTerm })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div> }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Dismiss alerts after a few seconds
        setTimeout(function() {
            var alert = document.querySelector('.alert');
            if (alert) {
                new bootstrap.Alert(alert).close();
            }
        }, 5000); // 5 seconds
    </script>
}